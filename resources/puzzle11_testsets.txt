ne,ne,nw,nw,ne,n

 u: -1, l: -3 r: -4  => 4


ne,ne,nw,nw,ne,n,ne

u: -1, l: -3 r: -5  => 5


se,se,sw,sw,nw,sw,s,ne

 u: 1, l: 2 r: 3  => 3


ne,ne,s

u: 1, l: 1 r: -1  => 2


ne,ne,se,n,se

 u: -1, l: 1 r: -3 => 4


 ne,ne,se,n,n,sw

 u: -2, l: -1 r: -3  => 3


 ne,ne,n

 u: -1, l: -1 r: -3  => 3


 ne,ne,s,s,sw,sw,sw,n,nw,n,n,se

 u: -1, l: -1 r: 0  => 1


 ne,ne,s,s,s,s,sw,sw

 u: 4, l: 4 r: 4  => 4

 ne,ne,nw,sw,sw,sw,n,n

 u: -2, l: -3 r: -1  => 3


 ne,ne,s,ne,n,nw,ne,n,sw,nw,s,s,nw,n,se,se,sw,nw,s

 u: 1, l: -1 r: -1  => 1





 if (l * r < 0) then path is l + r
 else
  u = combine(l,r)
  l/r = remainder
  path = u + l + r
